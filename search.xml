<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Markdown基本语法</title>
    <url>/2022/03/27/Markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</url>
    <content><![CDATA[<blockquote>
<p>本文大致复刻了<a href="https://markdown.xyz">https://markdown.xyz</a> 中的内容。</p>
</blockquote>
<h2 id="总览"><a href="#总览" class="headerlink" title="总览"></a>总览</h2><p>Markdown是一种轻量级的标记语言，创始人为John Gruber。它允许人们使用易读易写的纯文本格式编写文档，然后转换成有效的XHTML（或是HTML）文档。这种语言吸收了很多在电子邮件中已有的纯文本标记的特性。</p>
<p>由于Markdown的轻量化、易读易写特性，并且对于图片、图标和数学公式都有支持，许多网站都广泛使用Markdown来撰写帮助文档或是用于论坛上发表消息，甚至还能被用来写电子书。</p>
<span id="more"></span>
<h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p>要创建标题，请在标题文本前添加井号（即”#”）。井号的数量代表了标题的级别。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Heading level 1</span><br><span class="line">## Heading level 2</span><br><span class="line">### Heading level 3</span><br><span class="line">#### Heading level 4</span><br><span class="line">##### Heading level 5</span><br><span class="line">###### Heading level 6</span><br></pre></td></tr></table></figure>
<p>还可以在文本下方添加多个等号（数量大于等于2，即”==”）来标识一级标题，添加多个减号（数量大于等于2，即”—“）来标识二级标题。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Heading level 1</span><br><span class="line">===============</span><br><span class="line"></span><br><span class="line">Heading level 2</span><br><span class="line">---------------</span><br></pre></td></tr></table></figure>
<p>注意，当井号（即”#”）与标题文本间没有空格时，不同Markdown编辑器的处理方式不尽相同。所以，处于兼容考虑，我们需要在井号与标题文本间添加一个空格。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># True</span><br><span class="line">#False</span><br></pre></td></tr></table></figure>
<h2 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h2><p>要创建段落，需要使用空白行将一行或多行文本进行分割。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Religions die when they are proved to be true.</span><br><span class="line"></span><br><span class="line">Science is the record of dead religions.</span><br></pre></td></tr></table></figure>
<h2 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h2><p>要进行换行，需要在一行的末尾添加多个空格（数量大于等于2），然后输入回车，即可创建一个换行。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">To be or not to be: that is a question.  </span><br><span class="line">I could be bounded in a nutshell and count myself a king of infinite space. </span><br></pre></td></tr></table></figure>
<p>除了行末空格外，还可以使用HTML的换行符（即”&lt;br&gt;”）。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">But a man is not made for defeat. &lt;br&gt;</span><br><span class="line">A man can be destroyed but not defeated. </span><br></pre></td></tr></table></figure>
<h2 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h2><p>要进行强调，可以将文本设置为粗体或斜体。</p>
<h3 id="粗体"><a href="#粗体" class="headerlink" title="粗体"></a>粗体</h3><p>要加粗文本，需要在加粗部分前后各添加两个星号（即”**”）或下划线（即”__”）。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">All the bright precious things fade **so fast** ... and they don&#x27;t come back. </span><br><span class="line">So we beat on, __boats against the current__, borne back ceaselessly into the past. </span><br><span class="line">Lo**li**ta</span><br></pre></td></tr></table></figure>
<p>Markdown编辑器在处理单词或短语中下划线的方法并不一致，出于兼容考虑，在对单词或短语中间部分加粗时，应该使用星号。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">T**ru**e</span><br><span class="line">F__als__e</span><br></pre></td></tr></table></figure>
<h3 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a>斜体</h3><p>要使用斜体显示文本，需要在目标文本前后添加一个星号（即”*”）或下划线（即”_”）。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Life *will change*. </span><br><span class="line">I have to _rush ahead_. </span><br><span class="line">Per*so*na</span><br></pre></td></tr></table></figure>
<p>与粗体相同，Markdown编辑器处理单词或短语中下划线的方法并不一致，出于兼容考虑，在将单词或短语中间部分转换为斜体时，应该使用星号。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">T*ru*e</span><br><span class="line">F_als_e</span><br></pre></td></tr></table></figure>
<h3 id="加粗斜体"><a href="#加粗斜体" class="headerlink" title="加粗斜体"></a>加粗斜体</h3><p>要同时使用粗体和斜体突出显示文本，需要在目标文本前后各添加三个星号（即”<em>*</em>“）或三个下划线（即”___”）。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Rather than love, than money, than fame, ***give me truth***. </span><br><span class="line">There is ___no odor so bad___ as that which arises from goodness tainted. </span><br><span class="line">Wal***de***n</span><br></pre></td></tr></table></figure>
<p>混用也是被允许的</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">What you pay for is pain. At such times **_the pain itself is the reward_** of Labour. </span><br><span class="line">A man&#x27;s opinion of himself determines _**his own destiny*__, or his final destination. </span><br></pre></td></tr></table></figure>
<p>同样的，Markdown编辑器处理单词或短语中下划线的方法并不一致，出于兼容考虑，在将单词或短语中间部分转换为加粗斜体时，应该使用星号。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">T***ru***e</span><br><span class="line">F___als___e</span><br></pre></td></tr></table></figure>
<h2 id="块引用"><a href="#块引用" class="headerlink" title="块引用"></a>块引用</h2><p>要创建块引用，需要在段落前添加一个大于号（即”&gt;”）。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; Dorothy followed her through many of the beautiful rooms in her castle.</span><br></pre></td></tr></table></figure>
<p>块引用可以包含多个段落，只需要在段落之间的空白行各添加一个大于号（即”&gt;”）就可以了。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; Dorothy followed her through many of the beautiful rooms in her castle.</span><br><span class="line">&gt;</span><br><span class="line">&gt; The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.</span><br></pre></td></tr></table></figure>
<p>块引用可以嵌套，对要嵌套的段落前再添加大于号（即”&gt;”）即可。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; Dorothy followed her through many of the beautiful rooms in her castle.</span><br><span class="line">&gt;</span><br><span class="line">&gt;&gt; The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.</span><br></pre></td></tr></table></figure>
<p>块引用可以包含其他Markdown格式的元素，但并非所有元素都可以使用。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; #### The quarterly results look great!</span><br><span class="line">&gt;</span><br><span class="line">&gt; - Revenue was off the chart.</span><br><span class="line">&gt; - Profits were higher than ever.</span><br><span class="line">&gt;</span><br><span class="line">&gt;  *Everything* is going according to **plan**.</span><br></pre></td></tr></table></figure>
<h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>Markdown可以将多个条目组织成有序或无序列表</p>
<h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><p>要创建有序列表，需要在每个列表项前添加数字并紧跟一个英文句点（即”.”）。数字不影响列表序号。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. First item</span><br><span class="line">2. Second item</span><br><span class="line">3. Third item</span><br></pre></td></tr></table></figure>
<h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><p>要创建无序列表，需要在每个列表项前面添加减号（即”-“）、加号（即”+”）或星号（即”*”）。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- First item</span><br><span class="line">- Second item</span><br><span class="line">- Third item</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">+ First item</span><br><span class="line">+ Second item</span><br><span class="line">+ Third item</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">* First item</span><br><span class="line">* Second item</span><br><span class="line">* Third item</span><br></pre></td></tr></table></figure>
<p>Markdown编辑器处理同一列表中混用不同标识符的方法并不一致，出于兼容考虑，再同一列表中应该只使用一种标识符。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- True</span><br><span class="line">- True</span><br><span class="line">- True</span><br><span class="line"></span><br><span class="line">- False</span><br><span class="line">+ False</span><br><span class="line">* False</span><br></pre></td></tr></table></figure>
<h3 id="列表嵌套"><a href="#列表嵌套" class="headerlink" title="列表嵌套"></a>列表嵌套</h3><p>要嵌套列表，需要对目标列表项缩进四个空格。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. First item</span><br><span class="line">2. Second item</span><br><span class="line">    1. Indented item</span><br><span class="line">    2. Indented item</span><br><span class="line">3. Third item</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- First item</span><br><span class="line">- Second item</span><br><span class="line">    - Indented item</span><br><span class="line">    - Indented item</span><br><span class="line">- Third item</span><br></pre></td></tr></table></figure>
<h3 id="添加其他元素"><a href="#添加其他元素" class="headerlink" title="添加其他元素"></a>添加其他元素</h3><p>要在保留列表连续性的同时在列表中添加另一种元素，需要将该元素缩进四个空格。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*   This is the first list item. </span><br><span class="line">*   Here&#x27;s the second list item. </span><br><span class="line"></span><br><span class="line">    I need to add another paragraph below the second list item. </span><br><span class="line"></span><br><span class="line">*   And here&#x27;s the third list item. </span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*   This is the first list item. </span><br><span class="line">*   Here&#x27;s the second list item. </span><br><span class="line"></span><br><span class="line">    &gt; A blockquote would look great below the second list item. </span><br><span class="line"></span><br><span class="line">*   And here&#x27;s the third list item. </span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.  Open the file. </span><br><span class="line">2.  Find the following code block on line 21: </span><br><span class="line"></span><br><span class="line">        &lt;html&gt;</span><br><span class="line">          &lt;head&gt;</span><br><span class="line">            &lt;title&gt;Test&lt;/title&gt;</span><br><span class="line">          &lt;/head&gt;</span><br><span class="line"></span><br><span class="line">3.  Update the title to match the name of your website. </span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.  Open the file containing the Linux mascot. </span><br><span class="line">2.  Marvel at its beauty. </span><br><span class="line"></span><br><span class="line">    ![Tux, the Linux mascot](/assets/images/tux.png) </span><br><span class="line"></span><br><span class="line">3.  Close the file. </span><br></pre></td></tr></table></figure>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>要将目标文本表示为代码，要将其用反引号（即”`”）包括。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">At the command prompt, type `nano`. </span><br></pre></td></tr></table></figure>
<h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><p>要创建代码块，需要将代码块中每一行缩进至少四个空格或一个制表符。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;hello world\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><p>要创建分割线，需要在单独一行上使用三个以上的星号（即”<em>*</em>“）、减号（即”—-“）或下划线（即”___”），并且不能包含其它内容。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">***</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">___</span><br></pre></td></tr></table></figure>
<p>出于兼容性考虑，应该在分割线前后添加空白行。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Try to put a blank line before... </span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">...and after a horizontal rule. </span><br><span class="line"></span><br><span class="line">Without blank lines, this would be a heading. </span><br><span class="line">---</span><br><span class="line">Don&#x27;t do this! </span><br></pre></td></tr></table></figure>
<h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><p>要创建链接，需要将链接文本写在方括号中（即”[text]”），后面紧跟着写在圆括号中的URL（即”(link)”）。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">My favorite search engine is [Duck Duck Go](https://duckduckgo.com). </span><br></pre></td></tr></table></figure>
<p>要为链接添加标题，将其写在””中并放在URL后面。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">My favorite search engine is [Duck Duck Go](https://duckduckgo.com &quot;The best search engine for privacy&quot;). </span><br></pre></td></tr></table></figure>
<p>要将URL或电子邮件地址快速转换为链接，需要将其括在尖括号中。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;https://www.markdownguide.org&gt;</span><br><span class="line">&lt;fake@example.com&gt;</span><br></pre></td></tr></table></figure>
<p>如需要强调某个链接，则要在方括号前圆括号后添加星号。如需要将链接表示为代码，则要在方括号内添加反引号。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">I love supporting the **[EFF](https://eff.org)**.</span><br><span class="line">This is the *[Markdown Guide](https://www.markdownguide.org)*.</span><br><span class="line">See the section on [`code`](#code).</span><br></pre></td></tr></table></figure>
<h3 id="引用式链接"><a href="#引用式链接" class="headerlink" title="引用式链接"></a>引用式链接</h3><p>引用式链接是一种特殊类型的链接。它使得URL在Markdown中更易于显示和阅读。引用式链接由两部分组成：一部分被放置到正文文本中；另一部分被放置在文档中的其它地方，以便于阅读。</p>
<h3 id="第一部分"><a href="#第一部分" class="headerlink" title="第一部分"></a>第一部分</h3><p>引用式链接的第一部分的格式由两组方括号组成。第一组方括号内放的是显示为链接的文本，第二组方括号内放的是一个标签，该标签用于指向您存放在文档中其它位置的链接。</p>
<p>尽管不是必须的，但你可以在第一组和第二组方括号之间添加一个空格。第二组方括号中的标签不区分大小写，并且可以包含字母、数字、空格或标点符号。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[hobbit-hole][1]</span><br><span class="line">[hobbit-hole] [1]</span><br></pre></td></tr></table></figure>
<h3 id="第二部分"><a href="#第二部分" class="headerlink" title="第二部分"></a>第二部分</h3><p>引用式链接的第二部分可以包含以下属性：</p>
<ol>
<li>放在方括号内的标签，以及紧跟在方括号后面的一个冒号和至少一个空格（例如[label]: ）。</li>
<li>链接的URL（可以选择将其扩在尖括号内）。</li>
<li>链接的标题（可选）（可以将其括在双引号、单引号或圆括号内）。</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle</span><br><span class="line">[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle &quot;Hobbit lifestyles&quot;</span><br><span class="line">[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle &#x27;Hobbit lifestyles&#x27;</span><br><span class="line">[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle (Hobbit lifestyles)</span><br><span class="line">[1]: &lt;https://en.wikipedia.org/wiki/Hobbit#Lifestyle&gt; &quot;Hobbit lifestyles&quot;</span><br><span class="line">[1]: &lt;https://en.wikipedia.org/wiki/Hobbit#Lifestyle&gt; &#x27;Hobbit lifestyles&#x27;</span><br><span class="line">[1]: &lt;https://en.wikipedia.org/wiki/Hobbit#Lifestyle&gt; (Hobbit lifestyles)</span><br></pre></td></tr></table></figure>
<p>可以将链接的第二部分放在 Markdown 文档中的任何位置。有些人将它们放在被引用的段落的后面，有些人将它们放在文档的末尾（类似尾注或脚注）。</p>
<h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p>要添加图片，首先需要添加感叹号（即”!”），然后紧跟由方括号（即”[]”）括起来的可替代文本（即图片显示失败后显示此文本），最后跟着由圆括号（即”()”）括起的的图片资源路径或URL。可以选择在圆括号内URL后添加标题。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">![久遠寺有珠](Alice.jpg &quot;久遠寺有珠&quot;)</span><br></pre></td></tr></table></figure>
<p><img src="/2022/03/27/Markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/Alice.jpg" alt="久遠寺有珠" title="久遠寺有珠"></p>
<h3 id="带链接的图片"><a href="#带链接的图片" class="headerlink" title="带链接的图片"></a>带链接的图片</h3><p>要为图片添加链接，需要先为图片的Markdown标记添加一个方括号，然后紧跟一个圆括号，并在圆括号中添加链接。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[![久遠寺有珠](Alice.jpg &quot;久遠寺有珠&quot;)](https://www.pixiv.net/artworks/88096398)</span><br></pre></td></tr></table></figure>
<h2 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h2><p>要显示Markdown的标识字符，需要在字符前添加反斜杠（即”\\”）。以下字符的显示都需要用反斜杠标识。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">\ ` * _ &#123; &#125; [ ] &lt; &gt; ( ) # + - . ! |</span><br></pre></td></tr></table></figure>
<h2 id="HTML标签"><a href="#HTML标签" class="headerlink" title="HTML标签"></a>HTML标签</h2><p>大多数Markdown编辑器允许在Markdown文本中添加HTML标签。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">This **word** is bold. This &lt;em&gt;word&lt;/em&gt; is italic. </span><br></pre></td></tr></table></figure>
<p>出于安全原因，并非所有 Markdown 编辑器都支持在 Markdown 文档中添加 HTML，某些编辑器只支持 HTML 标签的子集。如有疑问，请查看 Markdown 编辑器的文档。</p>
<p>对于 HTML 的块级元素 <code>&lt;div&gt;</code>、<code>&lt;table&gt;</code>、<code>&lt;pre&gt;</code> 和 <code>&lt;p&gt;</code>，请在其前后使用空行与其它内容进行分隔。尽量不要使用制表符（tabs）或空格（spaces）对 HTML 标签做缩进，否则将影响格式。</p>
<p>在 HTML 块级标签内不能使用 Markdown 语法。例如 <code>&lt;p&gt;italic and **bold**&lt;/p&gt;</code> 将不起作用。</p>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>markdown</tag>
        <tag>blog</tag>
      </tags>
  </entry>
  <entry>
    <title>Attention机制</title>
    <url>/2022/03/28/Attention%E6%9C%BA%E5%88%B6/</url>
    <content><![CDATA[<blockquote>
<p>本文大部分借鉴了<a href="https://adaning.github.io/posts/40071.html">DaNing的博客</a>，宁tql。</p>
</blockquote>
<h2 id="历史"><a href="#历史" class="headerlink" title="历史"></a>历史</h2><p>Attention机制最早由Google Mind于 _Recurrent Models of Visual Attention_ 提出，用于解决计算机视觉领域的问题。之后，Bahdanau等人在论文 _Neural Machine Translation by Jointly Learning to Align and Translate_ 中采用Seq2Seq+Attention模型进行机器翻译，将Attention机制首次应用于NLP领域。2017年，Google的机器翻译团队发表了 _Attention is All You Need_ ，提出了基于Attention机制的Transformer模型，在后续的博客中会具体介绍。<span id="more"></span></p>
<h2 id="Seq2Seq模型"><a href="#Seq2Seq模型" class="headerlink" title="Seq2Seq模型"></a>Seq2Seq模型</h2><p>Seq2Seq是一种不限制输入输出序列长度的模型，被广泛应用于NLP各种任务中。Seq2Seq模型采用了Encoder-Decoder结构。其中Encoder将所有的输入序列编码为一个统一的语义向量，保存在其最后的hidden state中，并作为Decoder的输入。Decoder再对输入向量解码得到输出结果。</p>
<p><img src="/2022/03/28/Attention%E6%9C%BA%E5%88%B6/encoder_decoder.png" alt="Encoder-Decoder结构" title="Encoder-Decoder结构"></p>
<p>相较于原始的RNN，这种改进使得Seq2Seq模型的输入和输出可以是不同维度的。也正是由于这点，Seq2Seq模型的应用非常广泛，被使用在机器翻译、文本摘要、机器阅读理解和语音识别等等领域。下面我们通过机器翻译应用的一个例子来介绍Seq2Seq模型的工作过程。</p>
<p><img src="/2022/03/28/Attention%E6%9C%BA%E5%88%B6/machine_translation.png" alt="Seq2Seq的机器翻译案例" title="Seq2Seq的机器翻译案例"></p>
<ul>
<li><p>在Encoder的 $ t=1 $ 时，”早“作为输入 $x_{1}$ 到第一个节点中。在 $t=2$ 时，计算得到的hidden state $h_{1}$ 与下一个输入 $x_{2}$ （即”上“）一同送入下一个节点中。同理，$t=3$ 时得到最后的hidden state $h_{3}$ ，这就是Encoder对于输入编码最终得到的语义向量。</p>
</li>
<li><p>在Decoder中，$t=1$ 时，Encoder编码得到的语义向量 $h_{3}$ 与标识符<code>&lt;start&gt;</code>共同作为输入并开始解码。解码过程与编码类似，可以表示为下图的过程。</p>
<p><img src="/2022/03/28/Attention%E6%9C%BA%E5%88%B6/machine_translation_decoder.png" alt="Decoder的数据流图" title="Decoder的数据流图"></p>
<ol>
<li>RNN节点首先接受当前时间步的输入向量 $x_{t}$ （即图中红色点所表示的部分）和上一步传递的语义向量（即图中绿色点表示的部分），并将两者用于计算得到当前时间步的语义向量 $h_{t}$ （即图中蓝色点表示的部分）。</li>
<li>得到语义向量 $h_{t}$ 后，通过全连接层和softmax得到输出的概率分布，并取概率最高的词作为输出（即图中的橘红色点）。</li>
<li>输出的词进行一次词嵌入，作为下一时间步的输入。重复这个过程，直到输出标识符<code>&lt;stop&gt;</code>时终止。</li>
</ol>
</li>
</ul>
<p>但是Seq2Seq结构明显存在下列缺陷：</p>
<ul>
<li><p>Encoder必须将提取的所有信息压缩到一个固定长度的向量中去，这使得语义向量无法完整地表达整个输入序列的信息，导致了信息的丢失。</p>
</li>
<li><p>早先输入的内容会在迭代计算过程中被后输入的内容稀释掉，输入序列越长，这种情况就越严重。</p>
</li>
</ul>
<h2 id="Attention机制的提出"><a href="#Attention机制的提出" class="headerlink" title="Attention机制的提出"></a>Attention机制的提出</h2><p>Attention机制的提出在一定程度上解决了Seq2Seq模型的缺陷。在Attention机制中，Encoder不再是只传递一个固定长度的向量给Decoder。对于decoder每个时间步 $t$ ，Attention都会计算一个对应的权重向量 $w_t$ ，并与Encoder每一步的状态加权求和，再将结果和上一步状态 $h_{t-1}$ concat后进行计算。</p>
<p><img src="/2022/03/28/Attention%E6%9C%BA%E5%88%B6/encoder_decoder_attention.png" alt="Attention机制在Seq2Seq模型中的例子" title="Attention机制在Seq2Seq模型中的例子"></p>
<p>例如，对于之前提到的问题，在 $t=1$ 时刻，Attention机制先计算出注意力向量 $c_1$ 。</p>
<script type="math/tex; mode=display">c_1=h_1 \cdot w_{11} + h_2 \cdot w_{12} + h_3 \cdot w_{13}</script><p>然后将 $c_1$ 与前一个状态的输入concat到一起作为新的输入，并计算得到结果。</p>
<script type="math/tex; mode=display">\overline{h}_0=concat(h_3,c_1)</script><p>重复这个过程，直到结束。对于Decoder不同时间步节点，对Encoder的权重分布都不同，即注意力不同。例如，在翻译“Good”时，对“好”的关注应该最多，此时表现为 $w_{13}$ 显著大于 $w_{12}$ 和 $w_{13}$ 。</p>
<h2 id="注意力权重的计算"><a href="#注意力权重的计算" class="headerlink" title="注意力权重的计算"></a>注意力权重的计算</h2><p>如图所示，我们定义 $\overline{h}_s$ 为Encoder各个时间步的hidden state， $h_t$  为当前时间步Decoder的的hidden state（由原模型计算得出）， $\tilde{h}_t$ 则为Attention Layer的输出。</p>
<p><img src="/2022/03/28/Attention%E6%9C%BA%E5%88%B6/attention_weight.png" alt="注意力向量计算过程" title="注意力向量计算过程"></p>
<p>对于每个 $h_t$ ，其对应每个 $\overline{h}_S$ 都有权重 $a_t$ ， $a_t$ 则是由相似度评分 $score$ 通过 $Softmax$ 函数计算得到。</p>
<script type="math/tex; mode=display">a_t(s)=\frac{exp(score(h_t,\overline{h}_s))}{\sum_{s^{\prime}}(score(h_t,\overline{h}_{s^\prime}))}</script><p>其中， $score$ 可以通过但不限于以下方法计算得到。</p>
<script type="math/tex; mode=display">score(h_t,\overline{h}_s)=\begin{cases} h_t^T\overline{h}_s & Dot \\ h_t^TW_a\overline{h}_s & General \\ v_a^Ttanh(W_a\cdot concat(h_t,\overline{h}_s)) & Concat \end{cases}</script><p>然后，根据得到的注意力权重 $a_t$ ，可以生成注意力向量 $c_t$ 。</p>
<script type="math/tex; mode=display">c_t=\sum_sa_t(s)\cdot\overline{h}_s</script><p>最后，将注意力向量 $c_t$ 与原来的hidden state $h_t$ concat到一起。</p>
<script type="math/tex; mode=display">\tilde{h}_t=tanh(W_c\cdot[c_t;h_t])</script><p>其中 $W_c$ 为恢复矩阵，用于统一 $c_t$ 和 $h_t$ concat后向量的维度。</p>
<h2 id="深入理解Attention机制"><a href="#深入理解Attention机制" class="headerlink" title="深入理解Attention机制"></a>深入理解Attention机制</h2><p>实际上，Attention机制的使用并不依赖于Seq2Seq模型，在抛弃了Seq2Seq后，我们仍然说Attention的本质是对某些数据分配某些权重参数，然后再对它们进行合并。比较主流的Attention机制是采用键值对查询的方式，即一个查询（Query）通过一系列键值对（\<Key - value>）的映射。</Key></p>
<p><img src="/2022/03/28/Attention%E6%9C%BA%E5%88%B6/attention_qkv.png" alt="Attention机制的扩展" title="Attention机制的扩展"></p>
<p>具体来说，其工作机制可以分成三步：</p>
<ol>
<li>计算Query与Key的相似度，得到权值，常用的相似度函数有点积、拼接、感知机等。</li>
<li>对权值进行各种Softmax归一化，得到可以直接用于计算的权值。</li>
<li>用归一化得来的权值与Value加权求和。</li>
</ol>
<p>即：</p>
<script type="math/tex; mode=display">\begin{aligned}
& \alpha _i = \operatorname {softmax}(\operatorname {similarity}(QK^T)) \\
& attention((K, V), Q) = \sum_{i=1}^N \alpha_i v_i \quad(v_i \in V)
\end{aligned}</script><p><img src="/2022/03/28/Attention%E6%9C%BA%E5%88%B6/attention_qkv_2.png" alt="Attention机制的扩展流程" title="Attention机制的扩展流程"></p>
<p>在自然语言处理任务中，往往 Key 和 Value 是相同的。需要注意的是，计算出来的Attention Value是一个向量，代表序列元素$x_j$的编码向量，包含了元素$x_j$的上下文关系，即同时包含全局联系和局部联系。全局联系很好理解，因为在计算时考虑了该元素与其他所有元素的相似度计算；而局部联系则是因为在对元素$x_j$进行编码时，重点考虑与其相似度较高的局部元素，尤其是其本身。</p>
<h2 id="Attention机制的优劣"><a href="#Attention机制的优劣" class="headerlink" title="Attention机制的优劣"></a>Attention机制的优劣</h2><p>相比于传统的RNN和CNN，Attention机制具有以下优点：</p>
<ul>
<li>一步到位获取全局与局部的联系，不会像RNN网络那样对长期依赖的捕捉会收到序列长度的限制。因为在计算Attention Value时，是将序列的每一个元素和其它元素的对比，在这个过程中每一个元素间的距离都是一；而在时间序列的RNN中，元素的值是通过一步步递推得到的长期依赖关系获取的，然而越长的序列捕捉长期依赖关系的能力就会越弱。</li>
<li>Attention机制每一步的计算都不依赖于上一步的计算结果，因此可以并行计算，大大减少了模型的训练花费。</li>
<li>一般来说，相比CNN与RNN，参数少，模型复杂度更低。</li>
</ul>
<p>但Attention机制的缺点也比较明显。Attention机制是对序列的所有元素并行处理的，所以无法考虑输入序列的顺序，这在自然语言处理任务中是一个很糟糕的事。因为在自然语言中，词句的顺序包含了非常多的信息，如果缺失了这部分的信息，则得到的结果往往会大大折扣。</p>
]]></content>
      <categories>
        <category>论文阅读</category>
      </categories>
      <tags>
        <tag>paper</tag>
        <tag>nlp</tag>
        <tag>ml</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown扩展语法</title>
    <url>/2022/03/27/Markdown%E6%89%A9%E5%B1%95%E8%AF%AD%E6%B3%95/</url>
    <content><![CDATA[<h2 id="可用性"><a href="#可用性" class="headerlink" title="可用性"></a>可用性</h2><p>并非所有的 Markdown 应用程序都支持扩展语法。你需要确认你所使用的应用程序是否支持你所需要使用的扩展语法。如果不支持，则有可能是需要开启相应的扩展模块。</p>
<span id="more"></span>
<h2 id="表格（Tables）"><a href="#表格（Tables）" class="headerlink" title="表格（Tables）"></a>表格（Tables）</h2><p>如需添加表格，请使用三个或更多个连字符（<code>---</code>）来为每个列创建表头，并使用管道符（<code>|</code>）来分隔每个列。为兼容考虑，你还应该在行的两侧添加管道符。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">| Syntax      | Description |</span><br><span class="line">| ----------- | ----------- |</span><br><span class="line">| Header      | Title       |</span><br><span class="line">| Paragraph   | Text        |</span><br></pre></td></tr></table></figure>
<p>渲染效果如下所示：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>Syntax</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>Header</td>
<td>Title</td>
</tr>
<tr>
<td>Paragraph</td>
<td>Text</td>
</tr>
</tbody>
</table>
</div>
<p>单元格（cell）宽度是可变的，如下所示。渲染效果相同。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">| Syntax | Description |</span><br><span class="line">| --- | ----------- |</span><br><span class="line">| Header | Title |</span><br><span class="line">| Paragraph | Text |</span><br></pre></td></tr></table></figure>
<h3 id="对齐"><a href="#对齐" class="headerlink" title="对齐"></a>对齐</h3><p>通过在标题行中的连字符（hyphens）的左侧或右侧或两侧添加冒号（<code>:</code>），可以将对应列中的文本向左或向右或居中对齐。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">| Syntax      | Description | Test Text     |</span><br><span class="line">| :---        |    :----:   |          ---: |</span><br><span class="line">| Header      | Title       | Here&#x27;s this   |</span><br><span class="line">| Paragraph   | Text        | And more      |</span><br></pre></td></tr></table></figure>
<p>渲染效果如下所示：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">Syntax</th>
<th style="text-align:center">Description</th>
<th style="text-align:right">Test Text</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">Header</td>
<td style="text-align:center">Title</td>
<td style="text-align:right">Here’s this</td>
</tr>
<tr>
<td style="text-align:left">Paragraph</td>
<td style="text-align:center">Text</td>
<td style="text-align:right">And more</td>
</tr>
</tbody>
</table>
</div>
<h2 id="围栏代码块（Fenced-Code-Blocks）"><a href="#围栏代码块（Fenced-Code-Blocks）" class="headerlink" title="围栏代码块（Fenced Code Blocks）"></a>围栏代码块（Fenced Code Blocks）</h2><p>Markdown 的基本语法允许你通过缩进四个空格或一个制表符来创建 <a href="https://www.markdown.xyz/basic-syntax#code-blocks">代码块</a> 。如果你觉得不方便，可以试试围栏代码块（fenced code blocks）。根据 Markdown 解析器或编辑器的不同，代码块的前后可以使用三个反引号（`````）或三个波浪号（~~~）来标记围栏代码块。这有什么优势吗？你不必费力缩进任何行了！</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">```</span><br><span class="line">&#123;</span><br><span class="line">  &quot;firstName&quot;: &quot;John&quot;,</span><br><span class="line">  &quot;lastName&quot;: &quot;Smith&quot;,</span><br><span class="line">  &quot;age&quot;: 25</span><br><span class="line">&#125;</span><br><span class="line">```</span><br></pre></td></tr></table></figure>
<p>渲染效果如下所示：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;firstName&quot;: &quot;John&quot;,</span><br><span class="line">  &quot;lastName&quot;: &quot;Smith&quot;,</span><br><span class="line">  &quot;age&quot;: 25</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="语法高亮"><a href="#语法高亮" class="headerlink" title="语法高亮"></a>语法高亮</h3><p>许多 Markdown 解析器都支持围栏代码块的语法高亮功能。此功能允许你为编写代码所用的编程语言添加带颜色的语法高亮显示。如需添加语法高亮，请在围栏代码块前的反引号旁指定所用的编程语言。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">```json</span><br><span class="line">&#123;</span><br><span class="line">  &quot;firstName&quot;: &quot;John&quot;,</span><br><span class="line">  &quot;lastName&quot;: &quot;Smith&quot;,</span><br><span class="line">  &quot;age&quot;: 25</span><br><span class="line">&#125;</span><br><span class="line">```</span><br></pre></td></tr></table></figure>
<p>渲染效果如下所示：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;firstName&quot;</span>: <span class="string">&quot;John&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;lastName&quot;</span>: <span class="string">&quot;Smith&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;age&quot;</span>: <span class="number">25</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="脚注（Footnotes）"><a href="#脚注（Footnotes）" class="headerlink" title="脚注（Footnotes）"></a>脚注（Footnotes）</h2><p>脚注（Footnotes）允许你添加注释（notes）和引用（references），而不会使文档正文混乱。当你创建脚注时，带有链接的上标数字会出现在你引用脚注的位置。 读者可以单击链接以跳转至页面底部的脚注内容处。</p>
<p>要创建一个脚注的引用，请在方括号中添加一个插入符（caret）以及一个标识符，标识符可以是数字或单词，但不能包含空格或制表符。标识符的作用仅是将脚注的引用和脚注本身进行关联，在输出中，脚注按顺序编号。</p>
<p>另一种创建脚注的方式是在方括号内添加一个插入符（caret）以及一个数字，后面跟着冒号和文本，即（<code>[^1]: My footnote.</code>）。这种方式让你不必在文档末尾添加脚注。你可以将脚注放到除列表（lists）、块引用（block quotes）和表格（tables）之外的任何位置上。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Here&#x27;s a simple footnote,[^1] and here&#x27;s a longer one.[^bignote]</span><br><span class="line"></span><br><span class="line">[^1]: This is the first footnote.</span><br><span class="line"></span><br><span class="line">[^bignote]: Here&#x27;s one with multiple paragraphs and code.</span><br><span class="line"></span><br><span class="line">    Indent paragraphs to include them in the footnote.</span><br><span class="line"></span><br><span class="line">    `&#123; my code &#125;`</span><br><span class="line"></span><br><span class="line">    Add as many paragraphs as you like.</span><br></pre></td></tr></table></figure>
<p>渲染效果如下所示：</p>
<p>Here’s a simple footnote,<a href="https://www.markdown.xyz/extended-syntax/#fn:1">1</a> and here’s a longer one.<a href="https://www.markdown.xyz/extended-syntax/#fn:bignote">2</a></p>
<ol>
<li><p>This is the first footnote. <a href="https://www.markdown.xyz/extended-syntax/#fnref:1">↩</a></p>
</li>
<li><p>Here’s one with multiple paragraphs and code.</p>
<p>Indent paragraphs to include them in the footnote.</p>
<p><code>&#123; my code &#125;</code></p>
<p>Add as many paragraphs as you like. <a href="https://www.markdown.xyz/extended-syntax/#fnref:bignote">↩</a></p>
</li>
</ol>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>markdown</tag>
        <tag>blog</tag>
      </tags>
  </entry>
</search>
